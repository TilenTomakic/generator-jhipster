<%#
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
import { APP_INITIALIZER, NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';

import './vendor';
import { <%= angularXAppName %>SharedModule } from 'app/shared/shared.module';
import { <%= angularXAppName %>CoreModule } from 'app/core/core.module';
import { <%= angularXAppName %>AppRoutingModule } from './app-routing.module';
import { <%= angularXAppName %>HomeModule } from './home/home.module';
import { <%= angularXAppName %>EntityModule } from './entities/entity.module';
// jhipster-needle-angular-add-module-import JHipster will add new module here
import { MainComponent } from './layouts/main/main.component';
import { NavbarComponent } from './layouts/navbar/navbar.component';
import { FooterComponent } from './layouts/footer/footer.component';
import { PageRibbonComponent } from './layouts/profiles/page-ribbon.component';
<%_ if (enableTranslation) { _%>
import { ActiveMenuDirective } from './layouts/navbar/active-menu.directive';
<%_ } _%>
import { ErrorComponent } from './layouts/error/error.component';
import {
JSF_API_SERVICE,
JSF_APP_CONFIG,
JSF_HANDLERS,
JSF_APP_PAGE_DATA,
JSF_APP_ROUTER,
JSF_DEVELOPMENT_MODE,
JSF_RUNTIME_CONTEXT,
JsfAppConfig,
JsfModule,
JsfResponsiveService,
ModuleCacheService,
} from '@kalmia/jsf-app';
import { JsfRuntimeContext } from '@kalmia/jsf-common-es2015';
import { Angulartics2RouterlessModule } from 'angulartics2/routerlessmodule';
import { ApiService } from './jsf/api.service';
import { AppThemeComponent } from './jsf/theme/app-theme.component';
import { DefaultDefaultModule } from './jsf/jsf-themes/themes/default/variants/default/default-default.module';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { DropdownModule } from './jsf/jsf-handlers/common/handlers/dropdown/app/dropdown.module';
import { RadioModule } from './jsf/jsf-handlers/common/handlers/radio/app/radio.module';
import { ButtonToggleModule } from './jsf/jsf-handlers/common/handlers/button-toggle/app/button-toggle.module';
import { CodeEditorModule } from './jsf/jsf-handlers/common/handlers/code-editor/app/code-editor.module';
import { ColorPickerModule } from './jsf/jsf-handlers/common/handlers/color-picker/app/color-picker.module';
import { SliderModule } from './jsf/jsf-handlers/common/handlers/slider/app/slider.module';
import { ChipListModule } from './jsf/jsf-handlers/common/handlers/chip-list/app/chip-list.module';
import { ButtonToggleUnknownCustomModule } from './jsf/jsf-handlers/common/handlers/button-toggle-unknown-custom/app/button-toggle-unknown-custom.module';
import { FileUploadTokenModule } from './jsf/jsf-handlers/common/handlers/file-upload-token/app/file-upload-token.module';
import { ButtonToggleAllNoneCustomModule } from './jsf/jsf-handlers/common/handlers/button-toggle-all-none-custom/app/button-toggle-all-none-custom.module';
import { MonacoEditorModule } from 'ngx-monaco-editor';
import { NgxDnDModule } from '@swimlane/ngx-dnd';

@NgModule({
    imports: [
        BrowserModule,
        <%= angularXAppName %>SharedModule,
        <%= angularXAppName %>CoreModule,
        <%= angularXAppName %>HomeModule,
        // jhipster-needle-angular-add-module JHipster will add new module here
        <%= angularXAppName %>EntityModule,
        <%= angularXAppName %>AppRoutingModule,
        MonacoEditorModule.forRoot(),
        NgxDnDModule.forRoot(),
        Angulartics2RouterlessModule.forRoot(),
        JsfModule,
        DefaultDefaultModule,
        BrowserAnimationsModule
    ],
    declarations: [
        MainComponent,
        NavbarComponent,
        ErrorComponent,
        PageRibbonComponent,
        AppThemeComponent,
        <%_ if (enableTranslation) { _%>
        ActiveMenuDirective,
        <%_ } _%>
        FooterComponent
    ],
    bootstrap: [ MainComponent ],
    providers: [
        {
            provide   : APP_INITIALIZER,
            useFactory:
                (moduleCacheService: ModuleCacheService) => () => {
                moduleCacheService.manualStore('common/dropdown', DropdownModule);
                moduleCacheService.manualStore('common/radio', RadioModule);
                moduleCacheService.manualStore('common/chip-list', ChipListModule);
                moduleCacheService.manualStore('common/button-toggle', ButtonToggleModule);
                moduleCacheService.manualStore('common/code-editor', CodeEditorModule);
                moduleCacheService.manualStore('common/color-picker', ColorPickerModule);
                moduleCacheService.manualStore('common/button-toggle-all-none-custom', ButtonToggleAllNoneCustomModule);
                moduleCacheService.manualStore('common/button-toggle-unknown-custom', ButtonToggleUnknownCustomModule);
                moduleCacheService.manualStore('common/file-upload-token', FileUploadTokenModule);
                moduleCacheService.manualStore('common/slider', SliderModule);
            },
            deps: [ModuleCacheService],
            multi     : true
        },
        /* JSF */
        {
            provide: JSF_APP_CONFIG,
            useValue: {
                themePath: 'src/main/webapp/app/jsf/jsf-themes/',
                handlersPath: 'src/main/webapp/app/jsf/jsf-handlers/',
                poweredByUrl: 'jhipster',
                builder: {
                    assetsBasePath: './content/builder/',
                    disablePreviewThemeRendering: true,
                    disableProxyPreviewRendering: true,
                },
            } as JsfAppConfig,
        },
        {
            provide: JSF_HANDLERS,
            useValue: [],
        },
        {
            provide: JSF_RUNTIME_CONTEXT,
            useValue: {
            application: {
                language: 'en',
                },
            } as JsfRuntimeContext,
        },
        {
            provide: JSF_API_SERVICE,
            useExisting: ApiService,
        },
        {
            provide: JSF_APP_ROUTER,
            useExisting: ApiService,
        },
        {
            provide: JSF_APP_PAGE_DATA,
            useExisting: ApiService,
        },
        {
            provide: JSF_DEVELOPMENT_MODE,
            useFactory: () => true,
        },
        JsfResponsiveService,
    ]
})
export class <%= angularXAppName %>AppModule {}
